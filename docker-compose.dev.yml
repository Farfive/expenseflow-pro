# ========================================
# ExpenseFlow Pro Development Override
# ========================================

version: '3.8'

services:
  # ========================================
  # API Development Configuration
  # ========================================
  api:
    build:
      target: development
    environment:
      NODE_ENV: development
      LOG_LEVEL: debug
      # Enable detailed logging for development
      DEBUG: "express:*,prisma:*"
    volumes:
      # Enable hot reloading
      - .:/app
      - /app/node_modules
      - uploads_data:/app/uploads
      - logs_data:/app/logs
    ports:
      - "3000:3000"
      - "9229:9229" # Node.js debugger port
    command: npm run dev
    
  # ========================================
  # Database Development Configuration
  # ========================================
  postgres:
    environment:
      POSTGRES_USER: expenseflow_dev
      POSTGRES_PASSWORD: dev_password
      POSTGRES_DB: expenseflow_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      # Mount init scripts for development
      - ./docker/postgres/dev-init:/docker-entrypoint-initdb.d
    command: >
      postgres
      -c log_statement=all
      -c log_destination=stderr
      -c log_min_messages=info
      -c log_line_prefix='%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '

  # ========================================
  # Ollama Development Configuration
  # ========================================
  ollama:
    environment:
      OLLAMA_DEBUG: 1
      OLLAMA_VERBOSE: 1
    volumes:
      - ollama_dev_data:/root/.ollama
    ports:
      - "11434:11434"

  # ========================================
  # Redis Development Configuration
  # ========================================
  redis:
    ports:
      - "6379:6379"
    command: redis-server --loglevel verbose --appendonly yes
    volumes:
      - redis_dev_data:/data

  # ========================================
  # Development Tools
  # ========================================
  
  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: expenseflow-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@expenseflow.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - expenseflow-network

  # Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: expenseflow-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - expenseflow-network

  # ========================================
  # Development File Watcher (optional)
  # ========================================
  file-watcher:
    image: node:18-alpine
    container_name: expenseflow-watcher
    working_dir: /app
    volumes:
      - .:/app
      - /app/node_modules
    command: >
      sh -c "
        npm install -g nodemon &&
        echo 'File watcher ready...' &&
        tail -f /dev/null
      "
    networks:
      - expenseflow-network

# ========================================
# Development Volumes
# ========================================
volumes:
  postgres_dev_data:
    driver: local
  ollama_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  pgadmin_data:
    driver: local

# ========================================
# Development Networks
# ========================================
networks:
  expenseflow-network:
    driver: bridge 